rm(lista = ls())
source('~/Github/MIN_UCM/proyecto/explore/clustering.r')
rm(ls())
rm(l = ls())
rm(l <- ls())
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
setwd("~/Github/MIN_UCM/proyecto")
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
predictClimate(25,200)
install.packages("clue")
predictClimate(25,200)
predictClimate <- function(temperature,raining){
require("clue")
clue::cl_predict(result,matrix(c(temperature,raining),ncol=2));
}
#Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("explore/clustering/cargaFinalClustering.r")
data <- loadTraining(30); #esta funcion esta en cargaFinalClustering.r
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
#clustering jerarquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
result <- kmeans(temperatureRain,4)
#para dibujar
plot(temperatureRain,col=result$cluster)
climateNames <- vector(mode="number",length = 4);
climateNames[predictClimate(c(temperatures,mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Temperature)))),c(raining,mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Rain)))))]
predictClimate <- function(temperature,raining){
require("clue")
clue::cl_predict(result,matrix(c(temperature,raining),ncol=2));
}
#Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("explore/clustering/cargaFinalClustering.r")
data <- loadTraining(30); #esta funcion esta en cargaFinalClustering.r
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
#clustering jerarquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
result <- kmeans(temperatureRain,4)
#para dibujar
plot(temperatureRain,col=result$cluster)
climateNames <- vector(length = 4);
climateNames[predictClimate(c(temperatures,mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Temperature)))),c(raining,mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Rain)))))]
predictClimate <- function(temperature,raining){
require("clue")
clue::cl_predict(result,matrix(c(temperature,raining),ncol=2));
}
#Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("explore/clustering/cargaFinalClustering.r")
data <- loadTraining(30); #esta funcion esta en cargaFinalClustering.r
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
#clustering jerarquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
result <- kmeans(temperatureRain,4)
#para dibujar
plot(temperatureRain,col=result$cluster)
climateNames <- vector(length = 4);
climateNames[predictClimate(mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Temperature))),mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Rain))))]
mode(1)
mode("hola")
predictClimate <- function(temperature,raining){
require("clue")
clue::cl_predict(result,matrix(c(temperature,raining),ncol=2));
}
#Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("explore/clustering/cargaFinalClustering.r")
data <- loadTraining(30); #esta funcion esta en cargaFinalClustering.r
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
#clustering jerarquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
result <- kmeans(temperatureRain,4)
#para dibujar
plot(temperatureRain,col=result$cluster)
climateNames <- vector(mode = "character",length = 4);
climateNames[predictClimate(mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Temperature))),mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Panama.csv",header = TRUE, sep = ",")$Rain))))] = "tropical";
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Saudi Arabia.csv",header = TRUE, sep = ",")$Temperature)))
mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Saudi Arabia.csv",header = TRUE, sep = ",")$Rain))))
mean(as.double(na.omit(read.csv2(stringsAsFactors = FALSE,"sample/datasets/datasetsFinales/Saudi Arabia.csv",header = TRUE, sep = ",")$Rain)))
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
climateNames[predictClimate(25,200)]
climateNames[predictClimate(25,0)]
climateNames[predictClimate(25,50)]
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
climateNames[predictClimate(25,0)]
climateNames[predictClimate(20,200)]
climateNames[predictClimate(10,200)]
climateNames[predictClimate(3,200)]
climateNames[predictClimate(0,200)]
climateNames[predictClimate(25,200)]
climateNames[predictClimate(25,100)]
climateNames[predictClimate(0,100)]
climateNames[predictClimate(100,100)]
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/explore/clustering/clustering.r')
