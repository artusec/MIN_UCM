source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
rm(list=ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
rm(list=ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
climateNames
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
climateNames
names
match("Panama",names)
temperature[[56]]
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
centers
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
centers
index <- match("Panama",names);
centers<-Matrix(c(temperature[[index]],raining[[index]]),nrows=2);
index <- match("Panama",names);
centers<-matrix(c(temperature[[index]],raining[[index]]),nrows=2);
index <- match("Panama",names);
centers<-matrix(c(temperature[[index]],raining[[index]]),ncol=2);
centers
index <- match("Saudi Arabia",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
centers
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
centers
rm(list=ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
rm(list=ls())
#
# Archivo para realizar el clustering, determinando cuántos clusters tiene
# sentido diferenciar según los datos de los climas de los países.
#
#################################################################################
rm(list=ls())
# Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("model/clustering/cargaNormalizada.r")
# Esta función esta en cargaFinalClustering.r
data <- loadTraining(70)
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
rm(data)
rm(dataset)
rm(datasets)
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
# Clustering jerárquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
index <- match("Panama",names);
centers<-matrix(c(temperature[[index]],raining[[index]]),ncol=2);
centers
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
centers
index <- match("Italy",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
centers
index <- match("Canada",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
centers
rm(list=ls())
#################################################################################
# clustering.r
#
# Archivo para realizar el clustering, determinando cuántos clusters tiene
# sentido diferenciar según los datos de los climas de los países.
#
#################################################################################
rm(list=ls())
# Ejecutar todo el script hasta que salga un grafico con los grupos bien diferenciados
source("model/clustering/cargaNormalizada.r")
# Esta función esta en cargaFinalClustering.r
data <- loadTraining(70)
temperature<-data$temperatures;
raining<-data$raining;
names<-data$names;
rm(data)
rm(dataset)
rm(datasets)
temperatureRain <- matrix(c(temperature,raining),ncol=2); #Una columna para las temperaturas y otra para las lluvias.
# Clustering jerárquico para ver cuantos grupos tiene sentido hacer
plot(hclust(dist(temperatureRain)))
index <- match("Panama",names);
centers<-matrix(c(temperature[[index]],raining[[index]]),ncol=2);
index <- match("Saudi Arabia",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
index <- match("Italy",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
index <- match("Canada",names);
centers<-rbind(centers,c(temperature[[index]],raining[[index]]));
centers
result <- kmeans(temperatureRain,centers)
rm(list=ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
View(climates)
source("modify/limpiarDataset.r")
source("modify/limpiarDataset.r")
datasets
#Analizo Espana por ejemplo
source("cargarDatasets.r");
result
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
View(dataset)
View(datasets)
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
View(datasets[["france"]])
View(omit.na(datasets[["france"]]))
View(na.omit(datasets[["france"]]))
View(normalizarANormal(na.omit(datasets[["france"]])))
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]][["ATemperature"]])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]]["ATemperature"])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]][["ATemperature"]])
normalizarANormal(na.omit(datasets[["france"]]))[[1]][["ATemperature"]]
normalizarANormal(na.omit(datasets[["france"]]))[[1]][["ATemperature"]])
normalizarANormal(na.omit(datasets[["france"]]))[[1]]
normalizarANormal(na.omit(datasets[["france"]]))[[1]]
normalizarANormal(na.omit(datasets[["france"]]))[[1]][ATemperature]
normalizarANormal(na.omit(datasets[["france"]]))[[1]]["ATemperature"]
normalizarANormal(na.omit(datasets[["france"]]))[[1]]
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]])
View(normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]])
france[grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)]
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
View(france[grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)])
View(france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)])
View(france)
france$ATemperatures
france
france$ATemperature
rainTmp
france[["Year"]]
france[["Year"==1973]]
france["Year"==1973]
View(france$Year)
View(subset(france,Year==1974))
subset(france,Year==year)$ATemperature
subset(france,Year==1974)$ATemperature
year = 1975
year
rainTmp <- vector();
for(month in (france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
subset(france,Year==year)
subset(france,Year==year)[["JanTemperature"]]
rainTmp <- vector();
for(month in (france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
france$Year
temperature <- france<-subset(france,Year==year)$ATemperature
subset(france,Year==year)[[JanTemperature]]
france
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
for(year in france$Year){
rainTmp <- vector();
for(month in (france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
rainTmp
;
}
(na.omit(datasets[["france"]]))
rainTmp <- vector();
for(month in (france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
subset(france,Year==year)[[OctRain]]
subset(france,Year==year)[[OctRain]]
subset(france,Year==year)
View(subset(france,Year==year))
View(subset(france,Year==year)[OctRain])
View(subset(france,Year==year)[["OctRain"]])
rainTmp <- vector();
for(month in (france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)])){
print(month)
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
}
france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)])
france[grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)]
grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
rainTmp
View(rainTmp)
year
View(france)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- france<-subset(france,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
franceResult <- data.frame(year=france$Year,climates=climantes);
france
rm(list = ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
#Analizo Francia por ejemplo
source("cargarDatasets.r")
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- france<-subset(france,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
franceResult <- data.frame(year=france$Year,climates=climantes);
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
france
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- france<-subset(france,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
france
#Analizo Francia por ejemplo
source("cargarDatasets.r")
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(france,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
franceResult <- data.frame(year=france$Year,climates=climantes)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
france <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(france), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(france,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(france,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
franceResult <- data.frame(year=france$Year,climates=climates)
View(franceResult)
rm(france)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in france$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
View(frameResult)
countryResult <- data.frame(year=france$Year,climates=climates)
View(countryResult)
countryResult <- data.frame(year=france$Year,climates=climates)
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["germany"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
rm(list = ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["germany"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
country <- normalizarANormal(na.omit(datasets[["germany"]]))[[1]][[1]];
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["germany"]]))[[1]][[1]];
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
datasets[["india"]]
na.omit(datasets[["india"]])
normalizarANormal(na.omit(datasets[["india"]]))
normalizarANormal(na.omit(datasets[["india"]]))[[1]]
View(normalizarANormal(na.omit(datasets[["india"]]))[[1]])
normalizarANormal(na.omit(datasets[["india"]]))[[1]][[1]]
View(normalizarANormal(na.omit(datasets[["india"]]))[[1]][[1]])
country <- normalizarANormal(na.omit(datasets[["india"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["finland"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["France"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
#Analizo Francia por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["India"]]))[[1]][[1]];
climates <- vector();
p <- vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
}
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
rm(list = ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
rm(list = ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
rm(list = ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
#Analizo Francia ano por ano por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
rains <-vector();
temperatures <-vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
rains <- c(rains,raining);
temperatures<-c(temperatures,temperature);
}
plot(matrix(c(temperature,country$Year),ncol = 2),cos(x),type="l",col="blue",lwd=3);
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
plot(matrix(c(temperature,country$Year),ncol = 2),type="l",col="blue",lwd=3);
plot(matrix(c(country$Year,temperature),ncol = 2),type="l",col="blue",lwd=3);
temeprature
temperature
temperatures
plot(matrix(c(country$Year,temperature),ncol = 2),type="l",col="blue");
matrix(c(country$Year,temperature)
plot(matrix(c(country$Year,temperatures),ncol = 2),type="l",col="blue",lwd=3);
temperatures
country$Year
c(country$Year,temperatures)
plot(matrix(c(country$Year,temperatures),ncol = 2),type="l",col="blue",lwd=3);
plot(matrix(c(country$Year,temperatures),ncol = 2),type="l",col="red",lwd=3);
lines(matrix(c(country$Year,rains),ncol = 2),type="l",col="blue",lwd=3);
#Analizo Francia ano por ano por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["india"]]))[[1]][[1]];
climates <- vector();
p <- vector();
rains <-vector();
temperatures <-vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
rains <- c(rains,raining);
temperatures<-c(temperatures,temperature);
}
plot(matrix(c(country$Year,temperatures),ncol = 2),type="l",col="red",lwd=3);
lines(matrix(c(country$Year,rains),ncol = 2),type="l",col="blue",lwd=3);
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
#Analizo Francia ano por ano por ejemplo
source("cargarDatasets.r")
country <- normalizarANormal(na.omit(datasets[["france"]]))[[1]][[1]];
climates <- vector();
p <- vector();
rains <-vector();
temperatures <-vector();
for(year in country$Year){
rainTmp <- vector();
for(month in (grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE)))
rainTmp <- c(rainTmp,subset(country,Year==year)[[month]]);
raining <- mean(rainTmp);
temperature <- subset(country,Year==year)$ATemperature;
climates <- c(climates,climateNames[predictClimate(temperature,raining)]);
rains <- c(rains,raining);
temperatures<-c(temperatures,temperature);
}
plot(matrix(c(country$Year,temperatures),ncol = 2),type="l",col="red",lwd=3);
lines(matrix(c(country$Year,rains),ncol = 2),type="l",col="blue",lwd=3);
countryResult <- data.frame(year=country$Year,climates=climates)
View(countryResult)
lines(matrix(c(country$Year,climates),ncol = 2),col=[1:length(climates)],lwd=3);
lines(matrix(c(country$Year,climates),ncol = 2),col=c(1,2,3),lwd=3);
climates
lines(matrix(c(country$Year,climates),ncol = 2),col=c(1,2,3),lwd=3);
lines(matrix(c(country$Year,climates),ncol = 2),col=c(1,2,3,4),lwd=3);
climates
lines(matrix(c(country$Year,climates),ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,factor(climates)),ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,factor(climates)),type="p",ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,factor(climates)),type=2,ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,factor(climates)),type="2",ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,lapply(factor(climates),x-2)),type="2",ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,lapply(factor(climates),x-2)),ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,lapply(factor(climates),function(x){x-2})),ncol = 2),col=c(1,2,3,4),lwd=3);
factor(climates)
number(a)
lines(matrix(c(country$Year,lapply(as.numeric(factor(climates)),function(x){x-2})),ncol = 2),col=c(1,2,3,4),lwd=3);
lines(matrix(c(country$Year,lapply(as.numeric(factor(climates)),function(x){x-3})),ncol = 2),col=c(1,2,3,4),lwd=3);
rm(list=ls(9))
rm(list=ls())
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
write.csv2(countryResult)
write.csv2(countryResult,file = "out.csv")
View(temperatures)
