rm(lista = ls())
source('~/Github/MIN_UCM/proyecto/explore/clustering.r')
rm(ls())
rm(l = ls())
rm(l <- ls())
#Selecciono de forma aleatoria los paises de prueba
filled <- calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(datasets)));
normalized <- normalizarANormal(filled);
temperatures = vector();
raining = vector();
names = vector();
source("sample/datasets/cargarDatasets.R");
source("modify/limpiarDataset.R")
setwd("~/Github/MIN_UCM/proyecto")
source("sample/datasets/cargarDatasets.R");
source("modify/limpiarDataset.R")
#Selecciono de forma aleatoria los paises de prueba
filled <- calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(datasets)));
normalized <- normalizarANormal(filled);
temperatures = vector();
raining = vector();
names = vector();
#Selecciono de forma aleatoria los paises de prueba
filled <- calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(datasets)));
datasets
calcularMinAnuales(datasets)
calcularMinAnuales(datasets)
View(datasets)
filled <- lapply(datasets,function(x){calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(x)))});
View(filled)
normalized <- normalizarANormal(filled);
View(normalized)
normalized <- normalizarANormal(filled);
View(normalized)
resultNorm <- normalizarANormal(filled);
normalized <- resultNorm[[1]]
View(normalized)
View(resultNorm)
View(resultNorm[[1]])
normalized <- resultNorm[[1]];
normalized
View(normalized[[1]])
View(normalized[[1]]["JulRain"])
View(normalized[[1]]["*Rain"])
View(normalized[[1]]["JulRain","JunRain"])
View(normalized[[1]]["JulRain"|"JunRain"])
View(normalized[[1]][["JulRain","JunRain"]])
View(normalized[[1]]["JulRain","JunRain"])
View(normalized[[1]]["JunRain"])
colnames(normalized[[1]])
grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=FALSE);
grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE);
normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)];
View(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]);
mean(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]);
View(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]);
c(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]);
mean(c(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]));
View(c(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]));
View(normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]);
country <- normalized[[1]]
rainTmp <- vector();
for(month in (normalized[[1]][grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,month);
rainTmp
mean(rainTmp)
#Selecciono de forma aleatoria los paises de prueba
filled <- lapply(datasets,function(x){calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(x)))});
resultNorm <- normalizarANormal(filled);
normalized <- resultNorm[[1]];
temperatures = vector();
raining = vector();
names = vector();
for(country in normalized){
temperatures <- c(temperatures,mean(country$ATemperature));
raincolNames <- grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE);
#Uno todas las columnas de lluvias en un solo vector para tener todas las lluvias del año
rainTmp <- vector();
for(month in (country[grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,month);
raining <- mean(rainTmp);
names <-(c(names,country$Country[1]))
}
result <- data.frame(temperatures = temperatures, raining = raining, names = names);
View(result)
#Selecciono de forma aleatoria los paises de prueba
filled <- lapply(datasets,function(x){calcularMediasAnuales(calcularMaxAnuales(calcularMinAnuales(x)))});
resultNorm <- normalizarANormal(filled);
normalized <- resultNorm[[1]];
temperatures = vector();
raining = vector();
names = vector();
for(country in normalized){
temperatures <- c(temperatures,mean(country$ATemperature));
raincolNames <- grep("[A-Za-z]*Rain",colnames(country), perl=TRUE, value=TRUE);
#Uno todas las columnas de lluvias en un solo vector para tener todas las lluvias del año
rainTmp <- vector();
for(month in (country[grep("[A-Za-z]*Rain",colnames(normalized[[1]]), perl=TRUE, value=TRUE)]))
rainTmp <- c(rainTmp,month);
raining <- c(raining,mean(rainTmp));
names <-(c(names,country$Country[1]));
}
result <- data.frame(temperatures = temperatures, raining = raining, names = names);
View(result)
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
climateNames
raining
length(raining)
length(temperature)
climateNames
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
names
source('~/Github/MIN_UCM/proyecto/model/clustering/clustering.r')
